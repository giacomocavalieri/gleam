---
source: compiler-core/src/docs/tests.rs
expression: "\npub type Option(t) {\n  Some(t)\n  None\n}\n\n/// Returns the first value if it is `Some`, otherwise evaluates the given\n/// function for a fallback value.\n///\npub fn lazy_or(first: Option(a), second: fn() -> Option(a)) -> Option(a) {\n  case first {\n    Some(_) -> first\n    None -> second()\n  }\n}\n"
---
<!-- Page: app.html -->

<!-- Selector: .member:has(#lazy_or) -->
<div class="member">
    <div class="member-name">
      <h2 id="lazy_or">
        <a href="#lazy_or">
          lazy_or
        </a>
      </h2>
      
    </div>

    <pre><code class="hljs gleam">pub fn lazy_or(
  first: Option(a),
  second: fn() -&gt; Option(a),
) -&gt; Option(a)</code></pre>
    
    <div class="rendered-markdown"><p>Returns the first value if it is <code>Some</code>, otherwise evaluates the given
function for a fallback value.</p>
</div>
  </div>
